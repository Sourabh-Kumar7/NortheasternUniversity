/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import model.CustomExceptions;
import model.HashingUtil;
import model.User;
import static model.validationUtil.validatePassword;

/**
 *
 * @author sourabhkumar
 */
public class passwordPanel extends javax.swing.JPanel {

    /**
     * Creates new form passwordPanel
     */
    User u;
    public passwordPanel(User U) {
        u = U;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtNewPassword = new javax.swing.JPasswordField();
        txtConfirmNewPasswd = new javax.swing.JPasswordField();
        txtCurrPassword = new javax.swing.JPasswordField();
        rShowPassword = new javax.swing.JRadioButton();

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Change Password");

        jLabel1.setText("Current Password");

        jLabel2.setText("New Password");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel3.setText("Confirm New Password");

        rShowPassword.setText("Show Password");
        rShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rShowPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(lblTitle))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rShowPassword)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtConfirmNewPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCurrPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSave)
                .addGap(100, 100, 100))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtConfirmNewPasswd, txtCurrPassword, txtNewPassword});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(lblTitle)
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCurrPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtConfirmNewPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rShowPassword)
                .addGap(21, 21, 21)
                .addComponent(btnSave)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, txtConfirmNewPasswd, txtCurrPassword, txtNewPassword});

    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String currentPassword = new String(txtCurrPassword.getPassword()); // Get the password from JPasswordField
        String newPassword = new String(txtNewPassword.getPassword()); // Get the password from JPasswordField
        String confirmNewPassword = new String(txtConfirmNewPasswd.getPassword()); // Get the password from JPasswordField
        
        // Check if any of the password fields are empty
        if (currentPassword.isEmpty() || newPassword.isEmpty() || confirmNewPassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All password fields must be filled.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    
        // Hash the current password
        String currentPasswordHash = HashingUtil.hashString(currentPassword);
        
        // Check if the obtained hash matches the stored password hash
        if (!currentPasswordHash.equals(u.getHashedPassword())) {
            // Passwords don't match, display an error message
            JOptionPane.showMessageDialog(this, "Incorrect current password.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Validate the new password (add your validation logic here)
        try {
            validatePassword(newPassword);
        } catch (CustomExceptions.InvalidPasswordException e) {
            JOptionPane.showMessageDialog(this, "Invalid password. Password should meet certain criteria.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method
        }
        
        // Check if the new password is the same as the old password
        if (currentPasswordHash.equals(HashingUtil.hashString(newPassword))) {
            JOptionPane.showMessageDialog(this, "New password cannot be the same as the old password.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // Check if the new password and confirm new password match
        if (!newPassword.equals(confirmNewPassword)) {
            JOptionPane.showMessageDialog(this, "New password and confirm password do not match.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        // If everything is alright, update the user's password and display a success message
        u.setHashedPassword(HashingUtil.hashString(newPassword));
        JOptionPane.showMessageDialog(this, "Password changed successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
        
        // Clear the password fields
        txtCurrPassword.setText("");
        txtNewPassword.setText("");
        txtConfirmNewPasswd.setText("");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void rShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rShowPasswordActionPerformed
        // TODO add your handling code here:
        boolean showPassword = rShowPassword.isSelected();
        txtCurrPassword.setEchoChar(showPassword ? '\u0000' : '*');
        txtNewPassword.setEchoChar(showPassword ? '\u0000' : '*');
        txtConfirmNewPasswd.setEchoChar(showPassword ? '\u0000' : '*');
    }//GEN-LAST:event_rShowPasswordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JRadioButton rShowPassword;
    private javax.swing.JPasswordField txtConfirmNewPasswd;
    private javax.swing.JPasswordField txtCurrPassword;
    private javax.swing.JPasswordField txtNewPassword;
    // End of variables declaration//GEN-END:variables
}
