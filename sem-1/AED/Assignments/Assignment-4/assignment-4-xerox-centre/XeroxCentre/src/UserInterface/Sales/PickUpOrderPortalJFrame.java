/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Sales;

import DataManagement.DataManager;
import OrderManagement.Order;
import TheBusiness.Personnel.SalesPerson;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sourabhkumar
 */
public class PickUpOrderPortalJFrame extends javax.swing.JFrame {

    /**
     * Creates new form PickUpOrderPortalJFrame
     * @param parentFrame
     */
    javax.swing.JFrame parentFrame;
    SalesPerson salesPerson;
    public PickUpOrderPortalJFrame(JFrame parentFrame, SalesPerson salesPerson) {
        this.salesPerson = salesPerson;
        this.parentFrame = parentFrame;
        initComponents();
        Color lightBlue = new Color(173, 216, 230);
        getContentPane().setBackground(lightBlue);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); // Set close operation
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                loadParentFrame();
            }
        });
        
        loadData();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnPick = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jUnPickedOrderTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Order Pick Up Portal");

        btnPick.setText("Pick");
        btnPick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPickActionPerformed(evt);
            }
        });

        jUnPickedOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jUnPickedOrderTable);

        btnBack.setText("<- Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPick, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(94, 94, 94)
                            .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(58, 58, 58)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPick, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        loadParentFrame();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPickActionPerformed
        // TODO add your handling code here:
        // Get the selected row index
        int selectedRowIndex = jUnPickedOrderTable.getSelectedRow();

        // Check if a row is selected
        if (selectedRowIndex == -1) {
            // No row is selected, show an error message
            JOptionPane.showMessageDialog(this, "Please select an order to pick.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the Order ID from the selected row
        int orderId = (int) jUnPickedOrderTable.getValueAt(selectedRowIndex, 0);
        // Get the Order from DataManager using the Order ID
        Order orderToPick = DataManager.masterOrderList.get(orderId);

        // Check if the order has already been picked by another SalesPerson
        if (orderToPick.getSalesPersonId() != -1) {
            // Order has already been picked, show an error message
            JOptionPane.showMessageDialog(this, "This order has already been picked by another SalesPerson.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            // Update the Order's SalesPerson ID
            orderToPick.setSalesPersonId(this.salesPerson.getPersonId());
            // Add the Order ID to the SalesPerson's list of picked-up orders
            this.salesPerson.addPickedUpOrderId(orderId);

            // Show a success message
            JOptionPane.showMessageDialog(this, "Order picked successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

            // Refresh the table to remove the picked order
            loadData();
        }
    }//GEN-LAST:event_btnPickActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPick;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jUnPickedOrderTable;
    private javax.swing.JLabel lblTitle;
    // End of variables declaration//GEN-END:variables
    private void loadParentFrame() {
        Point myPosition = getLocation();
        this.parentFrame.setLocation(myPosition);
        this.parentFrame.setVisible(true);
        this.dispose();
    }

    private void loadData() {
        // Iterate through the orders and populate the table with unpicked orders
        DefaultTableModel model = (DefaultTableModel) jUnPickedOrderTable.getModel();
        model.setRowCount(0); // Clear existing rows

        for (Order order : DataManager.masterOrderList.values()) { // Remove the extra parenthesis
            // Check if the order has not been picked up by any salesperson (-1 indicates unpicked)
            if (order.getSalesPersonId() == -1) {
                // Add the order details to the table
                Object[] rowData = {order.getId(), order.getSellingPrice()};
                model.addRow(rowData);
            }
        }
    }

}
