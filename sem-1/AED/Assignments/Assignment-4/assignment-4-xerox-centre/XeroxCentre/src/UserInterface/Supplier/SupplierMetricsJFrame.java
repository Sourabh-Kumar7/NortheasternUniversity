/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserInterface.Supplier;

import DataManagement.DataManager;
import ProductManagement.Product;
import ProductManagement.ProductSalesHistory;
import TheBusiness.Personnel.Supplier;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;

import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author sourabhkumar
 */
public class SupplierMetricsJFrame extends javax.swing.JFrame {

    /**
     * Creates new form SupplierMetricsJFrame
     */
    javax.swing.JFrame parentFrame;
    /**
     * Creates new form PerformanceBusinessOwnerJFrame
     */
    Supplier supplier;
    public SupplierMetricsJFrame(javax.swing.JFrame parentFrame, Supplier supplier) {
        initComponents();
        this.parentFrame = parentFrame;
        this.supplier = supplier;
        initComponents();
        Color lightBlue = new Color(173, 216, 230);
        getContentPane().setBackground(lightBlue);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); // Set close operation
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                loadParentFrame();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        btnQuantitySoldChart = new javax.swing.JButton();
        btnTargetPriceChart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBack.setText("<- Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnQuantitySoldChart.setText("Quantity Sold Chart");
        btnQuantitySoldChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuantitySoldChartActionPerformed(evt);
            }
        });

        btnTargetPriceChart.setText("Target Price Chart");
        btnTargetPriceChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTargetPriceChartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(btnQuantitySoldChart, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)
                        .addComponent(btnTargetPriceChart, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuantitySoldChart, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTargetPriceChart, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(336, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnQuantitySoldChart, btnTargetPriceChart});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        loadParentFrame();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnQuantitySoldChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuantitySoldChartActionPerformed
        // TODO add your handling code here:
        CategoryDataset quantitySoldDataset = createQuantitySoldDataset();
        new QuantitySoldChartFrame(quantitySoldDataset);

    }//GEN-LAST:event_btnQuantitySoldChartActionPerformed

    private void btnTargetPriceChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTargetPriceChartActionPerformed
        // TODO add your handling code here:
        CategoryDataset targetPriceDataset = createTargetPriceDataset();
        new TargetPriceChartFrame(targetPriceDataset);
    }//GEN-LAST:event_btnTargetPriceChartActionPerformed
    

    private CategoryDataset createQuantitySoldDataset() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int productId : supplier.getProductIds()) {
            Product product = DataManager.productCatalog.get(productId);
            int quantitySold = 0;
            ProductSalesHistory productSalesHistory = DataManager.productSalesHistoryCatalog.get(productId);
            if (productSalesHistory != null) {
                List<Double> allSoldPriceOfProduct = productSalesHistory.getSoldPrices();
                quantitySold = allSoldPriceOfProduct.size();
            }
            dataset.addValue(quantitySold, "Quantity Sold", String.valueOf(productId));
        }
        return dataset;
    }


    private CategoryDataset createTargetPriceDataset() {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (int productId : supplier.getProductIds()) {
            Product product = DataManager.productCatalog.get(productId);
            dataset.addValue(product.getTargetPrice(), "Target Price", String.valueOf(productId));
        }
        return dataset;
    }

    
    private void loadParentFrame(){
        Point myPosition = getLocation();
        this.parentFrame.setLocation(myPosition);
        this.parentFrame.setVisible(true);
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnQuantitySoldChart;
    private javax.swing.JButton btnTargetPriceChart;
    // End of variables declaration//GEN-END:variables
}
