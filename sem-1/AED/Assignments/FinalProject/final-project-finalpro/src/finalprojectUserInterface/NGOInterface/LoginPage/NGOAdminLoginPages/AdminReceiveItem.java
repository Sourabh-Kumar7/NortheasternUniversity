/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package finalprojectUserInterface.NGOInterface.LoginPage.NGOAdminLoginPages;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import finalprojectBackend.DB4OUtility.DB4OUtility;
import finalprojectBackend.OperatingSystem.OperatingSystem;
import finalprojectBackend.Enterprise.NGO.NGOClass;
import finalprojectBackend.Enterprise.NGO.Manager;
import finalprojectBackend.Enterprise.NGO.Recepient;
import finalprojectBackend.Enterprise.Analytics.Analyst;
import finalprojectBackend.Enterprise.SupplyChain.DeliveryAgent;
import finalprojectBackend.Organization.AssignmentDonation;
import finalprojectUserInterface.MainJFrameForm;




/**
 *
 * @author sourabh
 */
public class AdminReceiveItem extends javax.swing.JPanel {

    /**
     * Creates new form AdminReceiveItem
     */
    MainJFrameForm MainLoginPage;
    private OperatingSystem operatingSystem;
    private DB4OUtility dB4OUtility;
    NGOClass ngo;

    public AdminReceiveItem(MainJFrameForm MainLPage, DB4OUtility dB4OUtility, OperatingSystem operatingSystem, NGOClass h) {
        initComponents();
        this.MainLoginPage = MainLPage;
        this.dB4OUtility = dB4OUtility;
        this.operatingSystem = operatingSystem;
        this.ngo = h;

        populateCompleteTable();
        populateDelhiveryVehicleTable();
        populateAnalysticsLabTable();

        for (Manager d : operatingSystem.getManagerDirectory()) {

            if (d.getNGOName().equals(ngo.getNameEnterprise())) {
                manager_cmb.addItem(d.getpName());
            }

        }

        for (Recepient pa : operatingSystem.getRecepientDirectory()) {
            if (pa.getNGOName().equals(ngo.getNameEnterprise())) {
                re_cmb.addItem(pa.getpName());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table_1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_2 = new javax.swing.JTable();
        searchtitle = new javax.swing.JLabel();
        reqBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_3 = new javax.swing.JTable();
        panel_1 = new javax.swing.JPanel();
        search1_btn = new javax.swing.JButton();
        name_txt = new javax.swing.JTextField();
        cat_txt = new javax.swing.JTextField();
        cat_lbl = new javax.swing.JLabel();
        search2_btn = new javax.swing.JButton();
        dualsearch_btn = new javax.swing.JButton();
        item_lbl = new javax.swing.JLabel();
        manager_cmb = new javax.swing.JComboBox<>();
        manager_lbl = new javax.swing.JLabel();
        re_cmb = new javax.swing.JComboBox<>();
        recepient_lbl = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(169, 146, 125));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table_1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "Category", "Item name", "Status", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 920, 138));

        table_2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Delivery Agent", "Delivery Vehicle Name", "Delivery Vehicle Type", "Delivery Vehicle Type", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 333, 920, 126));

        searchtitle.setBackground(new java.awt.Color(255, 255, 255));
        searchtitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        searchtitle.setText("Search and Receive donation");
        add(searchtitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 29, -1, 40));

        reqBtn.setBackground(new java.awt.Color(255, 204, 51));
        reqBtn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        reqBtn.setText("Generate request");
        reqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqBtnActionPerformed(evt);
            }
        });
        add(reqBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 710, -1, 30));

        table_3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Analyst Name", "Analysis Lab Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(table_3);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 477, 920, 126));

        panel_1.setBackground(new java.awt.Color(94, 80, 63));

        search1_btn.setBackground(new java.awt.Color(255, 204, 51));
        search1_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        search1_btn.setText("Search");
        search1_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1_btnActionPerformed(evt);
            }
        });

        cat_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cat_lbl.setText("Category:");

        search2_btn.setBackground(new java.awt.Color(255, 204, 51));
        search2_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        search2_btn.setText("Search");
        search2_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search2_btnActionPerformed(evt);
            }
        });

        dualsearch_btn.setBackground(new java.awt.Color(255, 204, 51));
        dualsearch_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dualsearch_btn.setText("Dual Search");
        dualsearch_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dualsearch_btnActionPerformed(evt);
            }
        });

        item_lbl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        item_lbl.setText("Item:");

        javax.swing.GroupLayout panel_1Layout = new javax.swing.GroupLayout(panel_1);
        panel_1.setLayout(panel_1Layout);
        panel_1Layout.setHorizontalGroup(
            panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_1Layout.createSequentialGroup()
                        .addComponent(item_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_1Layout.createSequentialGroup()
                        .addComponent(cat_lbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cat_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addGroup(panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(search1_btn)
                    .addComponent(search2_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dualsearch_btn)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        panel_1Layout.setVerticalGroup(
            panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_1Layout.createSequentialGroup()
                        .addGroup(panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(item_lbl)
                            .addComponent(name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search1_btn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panel_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cat_lbl)
                            .addComponent(cat_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(search2_btn)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_1Layout.createSequentialGroup()
                        .addComponent(dualsearch_btn)
                        .addGap(18, 18, 18)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(panel_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, -1, -1));

        add(manager_cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 620, 200, -1));

        manager_lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        manager_lbl.setText("Manager:");
        add(manager_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 620, -1, 20));

        add(re_cmb, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 650, 200, -1));

        recepient_lbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        recepient_lbl.setText("Recepient:");
        add(recepient_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 650, -1, 20));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(-5, -4, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void reqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow1 = table_1.getSelectedRow();
        int selectedRow2 = table_2.getSelectedRow();
        int selectedRow3 = table_3.getSelectedRow();

        if (selectedRow1 < 0 || selectedRow2 < 0 || selectedRow3 < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to generate a request.");
            return;
        }
        DefaultTableModel organAvailable = (DefaultTableModel) table_1.getModel();
        String donateEntity = organAvailable.getValueAt(selectedRow1, 4).toString();

        DefaultTableModel handlerList = (DefaultTableModel) table_2.getModel();
        String handler = handlerList.getValueAt(selectedRow2, 0).toString();
        System.out.println("print: " + handler);

        DefaultTableModel technicianList = (DefaultTableModel) table_3.getModel();
        String tech = technicianList.getValueAt(selectedRow3, 0).toString();
        System.out.println(" " + donateEntity + " " + handler + " " + tech);

        operatingSystem.requesting(donateEntity, handler, tech, ngo, manager_cmb.getSelectedItem().toString(), re_cmb.getSelectedItem().toString());
        dB4OUtility.storeSystem(operatingSystem);
        JOptionPane.showMessageDialog(this, "Request generated");
    }//GEN-LAST:event_reqBtnActionPerformed

    private void search1_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1_btnActionPerformed
        // TODO add your handling code here:
        populateCompTableName(name_txt.getText());
    }//GEN-LAST:event_search1_btnActionPerformed

    private void search2_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search2_btnActionPerformed
        // TODO add your handling code here:
        populateCategoryTable(cat_txt.getText());
    }//GEN-LAST:event_search2_btnActionPerformed

    private void dualsearch_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dualsearch_btnActionPerformed
        // TODO add your handling code here:
        populateDualTable(cat_txt.getText(),name_txt.getText() );
    }//GEN-LAST:event_dualsearch_btnActionPerformed

    private void populateCompleteTable() {
        DefaultTableModel model = (DefaultTableModel) table_1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable" + operatingSystem.getAssignmentDonationList().toString());
        for (AssignmentDonation d : operatingSystem.getAssignmentDonationList()) {
            System.out.println("populatetable " + d.getEntityName());

            Object[] row = new Object[5];
            row[0] = d.getItem();
            row[1] = d.getCategory();
            row[2] = d.getEntityName();
            row[3] = d.getStatusDonation();
            row[4] = d.getUserId();
            model.addRow(row);

        }

    }

    private void populateDualTable(String category, String item) {
        DefaultTableModel model = (DefaultTableModel) table_1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (AssignmentDonation d : operatingSystem.getAssignmentDonationList()) {

            if (d.getCategory().contains(category) && d.getEntityName().contains(item)) {
                Object[] row = new Object[5];
                row[0] = d.getItem();
                row[1] = d.getCategory();
                row[2] = d.getEntityName();
                row[3] = d.getStatusDonation();
                row[4] = d.getUserId();
                model.addRow(row);
            }

        }

    }

    private void populateDelhiveryVehicleTable() {
        DefaultTableModel model = (DefaultTableModel) table_2.getModel();
        model.setRowCount(0);
        System.out.println("populatetable" + operatingSystem.getAssignmentDonationList().toString());
        for (DeliveryAgent h : operatingSystem.getDelieveryAgentDirectory()) {

            Object[] row = new Object[5];
            try {
                row[0] = h.getpName();
                row[1] = h.getDeliveryVehicle().getDvehiclename();
                row[2] = h.getDeliveryVehicle().getDvehicletype();
                row[3] = h.getDeliveryVehicle().getDvehiclenum();
                row[4] = h.getDeliveryVehicle().getDvehicaldescription();
            } catch (Exception e) {
            }
            model.addRow(row);

        }

    }

    private void populateAnalysticsLabTable() {
        DefaultTableModel model = (DefaultTableModel) table_3.getModel();
        model.setRowCount(0);
        System.out.println("populatetable" + operatingSystem.getAssignmentDonationList().toString());
        for (Analyst h : operatingSystem.getAnalystDirectory()) {

            Object[] row = new Object[5];
            row[0] = h.getpName();
            row[1] = h.getNameOfLab();

            model.addRow(row);

        }

    }

    private void populateCategoryTable(String name) {
        DefaultTableModel model = (DefaultTableModel) table_1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (AssignmentDonation d : operatingSystem.getAssignmentDonationList()) {

            if (d.getCategory().contains(name)) {
                Object[] row = new Object[5];
                row[0] = d.getItem();
                try {
                    row[1] = d.getCategory();
                    row[2] = d.getEntityName();
                    row[3] = d.getStatusDonation();
                    row[4] = d.getUserId();
                } catch (Exception e) {

                }
                model.addRow(row);
            }

        }

    }

    private void populateCompTableName(String name) {
        DefaultTableModel model = (DefaultTableModel) table_1.getModel();
        model.setRowCount(0);
        System.out.println("populatetable");
        for (AssignmentDonation d : operatingSystem.getAssignmentDonationList()) {
//            System.log.println(d.getDonationEntityName().toLowerCase());
            if (d.getEntityName().contains(name)) {
                Object[] row = new Object[5];
                row[0] = d.getItem();
                row[1] = d.getCategory();
                row[2] = d.getEntityName();
                row[3] = d.getStatusDonation();
                row[4] = d.getUserId();
                model.addRow(row);
            }

        }

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cat_lbl;
    private javax.swing.JTextField cat_txt;
    private javax.swing.JButton dualsearch_btn;
    private javax.swing.JLabel item_lbl;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> manager_cmb;
    private javax.swing.JLabel manager_lbl;
    private javax.swing.JTextField name_txt;
    private javax.swing.JPanel panel_1;
    private javax.swing.JComboBox<String> re_cmb;
    private javax.swing.JLabel recepient_lbl;
    private javax.swing.JButton reqBtn;
    private javax.swing.JButton search1_btn;
    private javax.swing.JButton search2_btn;
    private javax.swing.JLabel searchtitle;
    private javax.swing.JTable table_1;
    private javax.swing.JTable table_2;
    private javax.swing.JTable table_3;
    // End of variables declaration//GEN-END:variables
}
