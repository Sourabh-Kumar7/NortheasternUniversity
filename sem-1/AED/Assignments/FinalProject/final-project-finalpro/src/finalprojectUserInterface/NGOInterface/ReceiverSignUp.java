/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package finalprojectUserInterface.NGOInterface;

import java.util.Date;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

import finalprojectBackend.DB4OUtility.DB4OUtility;
import finalprojectBackend.OperatingSystem.OperatingSystem;
import finalprojectBackend.Enterprise.NGO.NGOClass;
import finalprojectBackend.Enterprise.NGO.Recepient;
import finalprojectUserInterface.MainJFrameForm;
import java.awt.Color;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;


/**
 *
 * @author sourabh
 */
public class ReceiverSignUp extends javax.swing.JPanel {

    /**
     * Creates new form ReceiverSignUp
     */
    
    Random rand = new Random();

      
    boolean emptyValidationStatus = true;
    boolean validationCheck = true;
    
    MainJFrameForm MainLoginPage;
    //FirebaseHelper firebaseHelper;
    private OperatingSystem operatingSystem;
    private DB4OUtility dB4OUtility;
    public ReceiverSignUp(MainJFrameForm MainLPage, DB4OUtility dB4OUtility, OperatingSystem operatingSystem) {
        initComponents();
        this.MainLoginPage = MainLPage;
        this.dB4OUtility = dB4OUtility;
        this.operatingSystem = operatingSystem;
        for(NGOClass h: operatingSystem.getNGODirectory().getListOfNGO()){
            hospitalList.addItem(h.getNameEnterprise());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        signup_btn = new javax.swing.JButton();
        cmb_gender = new javax.swing.JComboBox<>();
        state_lbl = new javax.swing.JLabel();
        txtEnterpriseName = new javax.swing.JTextField();
        remarks_lbl = new javax.swing.JLabel();
        uname_lbl = new javax.swing.JLabel();
        pswd_lbl = new javax.swing.JLabel();
        ngo_lbl = new javax.swing.JLabel();
        dob_lbl = new javax.swing.JLabel();
        txt_diag = new javax.swing.JTextField();
        txtZip = new javax.swing.JTextField();
        gender_lbl = new javax.swing.JLabel();
        address_lbl = new javax.swing.JLabel();
        name_lbl = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        txt_dob = new javax.swing.JTextField();
        receivertitle_lbl = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        txtUsrName = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        zip_lbl = new javax.swing.JLabel();
        num_lbl = new javax.swing.JLabel();
        back_btn = new javax.swing.JButton();
        txt_telenum = new javax.swing.JTextField();
        hospitalList = new javax.swing.JComboBox<>();
        txtAdd = new javax.swing.JTextField();
        city_lbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(182, 209, 216));

        jPanel1.setBackground(new java.awt.Color(169, 146, 125));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        signup_btn.setBackground(new java.awt.Color(255, 204, 51));
        signup_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        signup_btn.setText("Sign Up");
        signup_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signup_btnActionPerformed(evt);
            }
        });

        cmb_gender.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmb_gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        state_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        state_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        state_lbl.setText("State:");

        remarks_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remarks_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        remarks_lbl.setText("Remarks");

        uname_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        uname_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        uname_lbl.setText("Username:");

        pswd_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pswd_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pswd_lbl.setText("Password:");

        ngo_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ngo_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ngo_lbl.setText("NGO:");

        dob_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dob_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dob_lbl.setText("Date of Birth:");

        gender_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        gender_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gender_lbl.setText("Gender:");

        address_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        address_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        address_lbl.setText("Address:");

        name_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        name_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name_lbl.setText("Name:");

        receivertitle_lbl.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        receivertitle_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        receivertitle_lbl.setText("Create Receiver Profile");

        zip_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        zip_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zip_lbl.setText("Zip Code:");

        num_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        num_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        num_lbl.setText("Phone no.:");

        back_btn.setBackground(new java.awt.Color(255, 204, 51));
        back_btn.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        back_btn.setText("Back");
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        hospitalList.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hospitalList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {  }));

        city_lbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        city_lbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        city_lbl.setText("City:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(151, 151, 151)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pswd_lbl)
                            .addComponent(ngo_lbl)
                            .addComponent(gender_lbl)
                            .addComponent(num_lbl))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hospitalList, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmb_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_telenum, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(name_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uname_lbl))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsrName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(remarks_lbl)
                    .addComponent(address_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dob_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(city_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(state_lbl, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(zip_lbl, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_diag, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(219, 219, 219)
                        .addComponent(signup_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(373, 373, 373))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(receivertitle_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(407, 407, 407))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmb_gender, hospitalList, txtAdd, txtCity, txtEnterpriseName, txtPass, txtState, txtUsrName, txtZip, txt_diag, txt_dob, txt_telenum});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {address_lbl, city_lbl, dob_lbl, gender_lbl, name_lbl, ngo_lbl, num_lbl, pswd_lbl, remarks_lbl, state_lbl, uname_lbl, zip_lbl});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {back_btn, signup_btn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(receivertitle_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(address_lbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(city_lbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(state_lbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(zip_lbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_dob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dob_lbl))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_diag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(remarks_lbl)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEnterpriseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name_lbl))
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUsrName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uname_lbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pswd_lbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hospitalList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ngo_lbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmb_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gender_lbl))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_telenum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(num_lbl))))
                .addGap(103, 103, 103)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back_btn)
                    .addComponent(signup_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {address_lbl, city_lbl, cmb_gender, dob_lbl, gender_lbl, hospitalList, name_lbl, ngo_lbl, num_lbl, pswd_lbl, remarks_lbl, state_lbl, txtAdd, txtCity, txtEnterpriseName, txtPass, txtState, txtUsrName, txtZip, txt_diag, txt_dob, txt_telenum, uname_lbl, zip_lbl});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {back_btn, signup_btn});

    }// </editor-fold>//GEN-END:initComponents

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed

        MainJFrameForm suc = new MainJFrameForm();
        ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
        suc.setVisible(true);
    }//GEN-LAST:event_back_btnActionPerformed

    private void signup_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signup_btnActionPerformed
        // TODO add your handling code here:
        
        try {
            if (EmpytyFieldValidation())
            {
                if (RegexValidation())
                {
                    String address = txtAdd.getText() + ", " + txtCity.getText() + ", " + txtState.getText() + ", " + txtZip.getText();
                    //uname, pswd, id, name, add, gender, telenum, dob diag
                    //SimpleDateFormat formatter = new SimpleDateFormat("dd-MMM-yyyy");
                    int id = rand.nextInt(99);
                    Recepient patient = new Recepient(txtUsrName.getText(), txtPass.getText(), String.valueOf(id), txtEnterpriseName.getText(), address, cmb_gender.getSelectedItem().toString(), txt_telenum.getText(),new Date() , txt_diag.getText(),hospitalList.getSelectedItem().toString());
                    System.out.println("Receiver added");

                    operatingSystem.addReceiver(patient);
                    dB4OUtility.storeSystem(operatingSystem);

                    MainJFrameForm suc = new MainJFrameForm();
                    ((JFrame) SwingUtilities.getWindowAncestor(this)).dispose();
                    suc.setVisible(true);
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"Some Error in entered data.Please check over the red fields to know more.");
                    validationCheck=true;
                }
            }
            else{
                JOptionPane.showMessageDialog(this,"Data Cant be empty. Please check over the red fields to know more.");
                emptyValidationStatus=true;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,"Receiver not registered, Try again");
            emptyValidationStatus=true;
        } 
    }//GEN-LAST:event_signup_btnActionPerformed


    private boolean RegexValidation() {
    if(!txtEnterpriseName.getText().matches("^[a-zA-Z ]+$"))
        {
            txtEnterpriseName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtEnterpriseName.setToolTipText("Please enter only characters and space.");
            validationCheck=false;
        }
        
        if(!txt_telenum.getText().matches("^[0-9]{10}$"))
        {
            txt_telenum.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txt_telenum.setToolTipText("Please enter a 10 digit number");
            validationCheck=false;
        }


        if(!txtZip.getText().matches("^[0-9]{5}$"))
        {
            txtZip.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtZip.setToolTipText("Please enter a 5 digit number");
            validationCheck=false;
        }
        return validationCheck;
    }   


    private boolean EmpytyFieldValidation() {
        if(txtAdd.getText().equals(null) || txtAdd.getText().trim().isEmpty() )
        {
            txtAdd.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtAdd.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtAdd.getText().equals(null) && !txtAdd.getText().trim().isEmpty() )
        {
            txtAdd.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtCity.getText().equals(null) || txtCity.getText().trim().isEmpty() )
        {
            txtCity.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtCity.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtCity.getText().equals(null) && !txtCity.getText().trim().isEmpty() )
        {
            txtCity.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtEnterpriseName.getText().equals(null) || txtEnterpriseName.getText().trim().isEmpty() )
        {
            txtEnterpriseName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtEnterpriseName.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtEnterpriseName.getText().equals(null) && !txtEnterpriseName.getText().trim().isEmpty() )
        {
            txtEnterpriseName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtPass.getText().equals(null) || txtPass.getText().trim().isEmpty() )
        {
            txtPass.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtPass.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtPass.getText().equals(null) && !txtPass.getText().trim().isEmpty() )
        {
            txtPass.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtState.getText().equals(null) || txtState.getText().trim().isEmpty() )
        {
            txtState.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
            txtState.setToolTipText("This Field Cannot be empty");
            emptyValidationStatus= false;
        }
        if(!txtState.getText().equals(null) && !txtState.getText().trim().isEmpty() )
        {
            txtState.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtUsrName.getText().equals(null) || txtUsrName.getText().trim().isEmpty() )
            {
                txtUsrName.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txtUsrName.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txtUsrName.getText().equals(null) && !txtUsrName.getText().trim().isEmpty() )
        {
            txtUsrName.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txtZip.getText().equals(null) || txtZip.getText().trim().isEmpty() )
            {
                txtZip.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txtZip.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txtZip.getText().equals(null) && !txtZip.getText().trim().isEmpty() )
        {
            txtZip.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txt_diag.getText().equals(null) || txt_diag.getText().trim().isEmpty() )
            {
                txt_diag.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txt_diag.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txt_diag.getText().equals(null) && !txt_diag.getText().trim().isEmpty() )
        {
            txt_diag.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txt_dob.getText().equals(null) || txt_dob.getText().trim().isEmpty() )
            {
                txt_dob.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txt_dob.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txt_dob.getText().equals(null) && !txt_dob.getText().trim().isEmpty() )
        {
            txt_dob.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }

        if(txt_telenum.getText().equals(null) || txt_telenum.getText().trim().isEmpty() )
            {
                txt_telenum.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                txt_telenum.setToolTipText("This Field Cannot be empty");
                emptyValidationStatus= false;
            }
        if(!txt_telenum.getText().equals(null) && !txt_telenum.getText().trim().isEmpty() )
        {
            txt_telenum.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        }
        
        return emptyValidationStatus;
    }
    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel address_lbl;
    private javax.swing.JButton back_btn;
    private javax.swing.JLabel city_lbl;
    private javax.swing.JComboBox<String> cmb_gender;
    private javax.swing.JLabel dob_lbl;
    private javax.swing.JLabel gender_lbl;
    private javax.swing.JComboBox<String> hospitalList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel name_lbl;
    private javax.swing.JLabel ngo_lbl;
    private javax.swing.JLabel num_lbl;
    private javax.swing.JLabel pswd_lbl;
    private javax.swing.JLabel receivertitle_lbl;
    private javax.swing.JLabel remarks_lbl;
    private javax.swing.JButton signup_btn;
    private javax.swing.JLabel state_lbl;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEnterpriseName;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtUsrName;
    private javax.swing.JTextField txtZip;
    private javax.swing.JTextField txt_diag;
    private javax.swing.JTextField txt_dob;
    private javax.swing.JTextField txt_telenum;
    private javax.swing.JLabel uname_lbl;
    private javax.swing.JLabel zip_lbl;
    // End of variables declaration//GEN-END:variables
}
