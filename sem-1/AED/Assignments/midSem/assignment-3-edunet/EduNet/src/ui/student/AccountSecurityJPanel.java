/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.student;

import javax.swing.JOptionPane;
import model.CustomExceptions;
import model.HashingUtil;
import model.User;
import static model.validationUtil.validatePassword;

/**
 *
 * @author saatw
 */
public class AccountSecurityJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AccountSecurityJPanel
     */
    User u;
    public AccountSecurityJPanel(User u) {
        initComponents();
        this.u = u;
        loadAccountSecurityData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblaccountsecurity = new javax.swing.JLabel();
        lblemail = new javax.swing.JLabel();
        lblcurrentpassword = new javax.swing.JLabel();
        lblnewpassword = new javax.swing.JLabel();
        lblretypepassword = new javax.swing.JLabel();
        btnChangePassword = new javax.swing.JButton();
        txtEmail = new javax.swing.JTextField();
        jCurrPassword = new javax.swing.JPasswordField();
        jNewPassword = new javax.swing.JPasswordField();
        jConfirmNewPassword = new javax.swing.JPasswordField();
        jRadioShowPsswdBtn = new javax.swing.JRadioButton();

        lblaccountsecurity.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblaccountsecurity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblaccountsecurity.setText("Account Security");

        lblemail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblemail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblemail.setText("Email");

        lblcurrentpassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblcurrentpassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblcurrentpassword.setText("Current Password");

        lblnewpassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblnewpassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblnewpassword.setText("New Password");

        lblretypepassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblretypepassword.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblretypepassword.setText("Confirm New Password");

        btnChangePassword.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnChangePassword.setText("Change password");
        btnChangePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangePasswordActionPerformed(evt);
            }
        });

        txtEmail.setEditable(false);

        jRadioShowPsswdBtn.setText("Show Password");
        jRadioShowPsswdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioShowPsswdBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblaccountsecurity, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jRadioShowPsswdBtn)
                    .addComponent(btnChangePassword)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblnewpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblcurrentpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblemail, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblretypepassword, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail)
                            .addComponent(jNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jConfirmNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCurrPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblcurrentpassword, lblemail, lblnewpassword, lblretypepassword});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jConfirmNewPassword, jCurrPassword, jNewPassword, txtEmail});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(lblaccountsecurity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblemail, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblcurrentpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCurrPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblnewpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblretypepassword, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jConfirmNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jRadioShowPsswdBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnChangePassword)
                .addContainerGap(169, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnChangePassword, jConfirmNewPassword, jCurrPassword, jNewPassword, lblcurrentpassword, lblemail, lblnewpassword, lblretypepassword, txtEmail});

    }// </editor-fold>//GEN-END:initComponents

    private void jRadioShowPsswdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioShowPsswdBtnActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        boolean showPassword = jRadioShowPsswdBtn.isSelected();
        jCurrPassword.setEchoChar(showPassword ? '\u0000' : '*');
        jNewPassword.setEchoChar(showPassword ? '\u0000' : '*');
        jConfirmNewPassword.setEchoChar(showPassword ? '\u0000' : '*');
    }//GEN-LAST:event_jRadioShowPsswdBtnActionPerformed

    private void btnChangePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangePasswordActionPerformed
        // TODO add your handling code here:
        String currentPassword = new String(jCurrPassword.getPassword()); // Get the password from JPasswordField
        String newPassword = new String(jNewPassword.getPassword()); // Get the password from JPasswordField
        String confirmNewPassword = new String(jConfirmNewPassword.getPassword()); // Get the password from JPasswordField

        // Check if any of the password fields are empty
        if (currentPassword.isEmpty() || newPassword.isEmpty() || confirmNewPassword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "All password fields must be filled.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Hash the current password
        String currentPasswordHash = HashingUtil.hashString(currentPassword);

        // Check if the obtained hash matches the stored password hash
        if (!currentPasswordHash.equals(u.getHashedPassword())) {
            // Passwords don't match, display an error message
            JOptionPane.showMessageDialog(this, "Incorrect current password.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validate the new password (add your validation logic here)
        try {
            validatePassword(newPassword);
        } catch (CustomExceptions.InvalidPasswordException e) {
            JOptionPane.showMessageDialog(this, "Invalid password. Password should meet certain criteria.", "Error", JOptionPane.ERROR_MESSAGE);
            return; // Exit the method
        }

        // Check if the new password is the same as the old password
        if (currentPasswordHash.equals(HashingUtil.hashString(newPassword))) {
            JOptionPane.showMessageDialog(this, "New password cannot be the same as the old password.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Check if the new password and confirm new password match
        if (!newPassword.equals(confirmNewPassword)) {
            JOptionPane.showMessageDialog(this, "New password and confirm password do not match.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // If everything is alright, update the user's password and display a success message
        u.setHashedPassword(HashingUtil.hashString(newPassword));
        JOptionPane.showMessageDialog(this, "Password changed successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

        // Clear the password fields
        jCurrPassword.setText("");
        jNewPassword.setText("");
        jConfirmNewPassword.setText("");
    }//GEN-LAST:event_btnChangePasswordActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChangePassword;
    private javax.swing.JPasswordField jConfirmNewPassword;
    private javax.swing.JPasswordField jCurrPassword;
    private javax.swing.JPasswordField jNewPassword;
    private javax.swing.JRadioButton jRadioShowPsswdBtn;
    private javax.swing.JLabel lblaccountsecurity;
    private javax.swing.JLabel lblcurrentpassword;
    private javax.swing.JLabel lblemail;
    private javax.swing.JLabel lblnewpassword;
    private javax.swing.JLabel lblretypepassword;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables

    private void loadAccountSecurityData() {
        if(u!=null){
            txtEmail.setText(u.getEmail());
            return;
        }
        JOptionPane.showMessageDialog(this, "User Not Found", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
