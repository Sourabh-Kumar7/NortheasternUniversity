/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.admin;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import model.Course;
import static model.DataManager.userMap;
import model.User;

/**
 *
 * @author SAI BHAVANESH
 */
public class ViewCourseJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ViewCourseJFrame
     */
    Course course;
    User  admin;
    public ViewCourseJFrame(Course course, User admin) {
        this.admin = admin;
        this.course = course;
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE); // Set close operation

        loadCourseData();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

        // Calculate the position to be at the lower right corner
        int x = screenSize.width - getWidth();
        int y = screenSize.height - getHeight();

        setLocation(x, y);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                ListCourseJFrame courseFrame = new ListCourseJFrame(admin);
                courseFrame.setVisible(true);
                dispose(); // Close the second frame
            }
        });
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblProfessorName = new javax.swing.JLabel();
        txtProfessorName = new javax.swing.JTextField();
        lblProfessorID = new javax.swing.JLabel();
        lblYear = new javax.swing.JLabel();
        txtProfessorID = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        lblSemester = new javax.swing.JLabel();
        SemesterComboBox = new javax.swing.JComboBox<>();
        lblCourseRating = new javax.swing.JLabel();
        txtCourseRating = new javax.swing.JTextField();
        txtCourseID = new javax.swing.JTextField();
        lblCourseID = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View Course Details");

        lblProfessorName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblProfessorName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProfessorName.setText("Professor Name");

        txtProfessorName.setEditable(false);

        lblProfessorID.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblProfessorID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProfessorID.setText("Professor ID");

        lblYear.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblYear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblYear.setText("Year");

        txtProfessorID.setEditable(false);
        txtYear.setEditable(false);

        lblSemester.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSemester.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSemester.setText("Semester");

        SemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fall", "Summer", "Spring" }));

        lblCourseRating.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCourseRating.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCourseRating.setText("Course Rating");

        txtCourseRating.setEditable(false);
        txtCourseID.setEditable(false);

        lblCourseID.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblCourseID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCourseID.setText("Course ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProfessorID)
                    .addComponent(lblProfessorName)
                    .addComponent(lblYear)
                    .addComponent(lblSemester)
                    .addComponent(lblCourseRating)
                    .addComponent(lblCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCourseRating, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(txtYear, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(txtProfessorID, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(SemesterComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCourseID, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(txtProfessorName))
                .addGap(82, 82, 82))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {SemesterComboBox, lblCourseID, lblCourseRating, lblProfessorID, lblProfessorName, lblSemester, lblYear, txtCourseID, txtCourseRating, txtProfessorID, txtProfessorName, txtYear});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(90, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCourseID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProfessorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProfessorName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProfessorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProfessorID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblYear))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSemester))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCourseRating)
                    .addComponent(txtCourseRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(117, 117, 117))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {SemesterComboBox, lblCourseID, lblCourseRating, lblProfessorID, lblProfessorName, lblSemester, lblYear, txtCourseID, txtCourseRating, txtProfessorID, txtProfessorName, txtYear});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> SemesterComboBox;
    private javax.swing.JLabel lblCourseID;
    private javax.swing.JLabel lblCourseRating;
    private javax.swing.JLabel lblProfessorID;
    private javax.swing.JLabel lblProfessorName;
    private javax.swing.JLabel lblSemester;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblYear;
    private javax.swing.JTextField txtCourseID;
    private javax.swing.JTextField txtCourseRating;
    private javax.swing.JTextField txtProfessorID;
    private javax.swing.JTextField txtProfessorName;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private void loadCourseData() {
        if (course != null) {
            // Set the course ID
            txtCourseID.setText(Integer.toString(course.getCourseId()));

            // Set the professor name (assuming you have a method to retrieve the professor's name)
            txtProfessorName.setText(getProfessorName(course.getInstructorID()));

            // Set the professor ID
            txtProfessorID.setText(Integer.toString(course.getInstructorID()));

            // Set the year
            txtYear.setText(Integer.toString(course.getYear()));

            // Set the semester
            SemesterComboBox.setSelectedItem(course.getSemester());

            // Set the course rating (assuming you have a method to retrieve the course rating)
            txtCourseRating.setText(Double.toString(course.getRating()));
        } else {
            // Handle the case where the course object is null
            showErrorMessage("Course details not available.");
        }
    } 
    private String getProfessorName(int professorID) {
        // Implement logic to retrieve the professor's name based on the professorID
        // You can query your data source or map here to get the name.
        // Return the professor's name as a String.
        User p = userMap.get(professorID);
        if(p!=null){
            return p.getName();
        }
        return "NA"; // Replace this with your actual logic
    }
    private void showErrorMessage(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }
}
