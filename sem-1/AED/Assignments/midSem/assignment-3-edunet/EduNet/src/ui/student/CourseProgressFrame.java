/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.student;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import model.Course;
import model.CourseProgress;
import static model.DataManager.courseMap;
import model.User;
import ui.professor.ProfessorPortalJFrame;

/**
 *
 * @author sourabhkumar
 */
public class CourseProgressFrame extends javax.swing.JFrame {

    /**
     * Creates new form CourseProgressFrame
     */
    CourseProgress selectedCourseProgress;
    int courseId;
    User u;
    public CourseProgressFrame(CourseProgress selectedCourseProgress, int courseId, User u) {
        this.selectedCourseProgress = selectedCourseProgress;
        this.u = u;
        this.courseId = courseId;
        initComponents();
        setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
        loadCourseProgressBar();
        
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                StudentPortalJFrame studentPortal = new StudentPortalJFrame(u);
                studentPortal.setVisible(true);
                studentPortal.manageEnrolledCourses();
                dispose(); // Close the second frame
           
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCourseID = new javax.swing.JTextField();
        txtCourseName = new javax.swing.JTextField();
        jProgressBar = new javax.swing.JProgressBar();
        btnIncreaseCourseProgress = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 16)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Course Progress");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Name");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Course ID");

        txtCourseID.setEditable(false);

        txtCourseName.setEditable(false);

        jProgressBar.setPreferredSize(new java.awt.Dimension(420, 70));

        btnIncreaseCourseProgress.setFont(new java.awt.Font("Helvetica Neue", 1, 30)); // NOI18N
        btnIncreaseCourseProgress.setText("+");
        btnIncreaseCourseProgress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncreaseCourseProgressActionPerformed(evt);
            }
        });

        jLabel3.setText("Progress Button");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 92, Short.MAX_VALUE)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnIncreaseCourseProgress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCourseID, txtCourseName});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIncreaseCourseProgress)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(183, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, txtCourseID, txtCourseName});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIncreaseCourseProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncreaseCourseProgressActionPerformed
        // TODO add your handling code here:
        // Handle the increase button action
        double currentProgress = selectedCourseProgress.getProgress();
        if (currentProgress < 100.0) {
            // Increment the progress by 10%
            double newProgress = currentProgress + 10;
            selectedCourseProgress.setProgress(newProgress);
            jProgressBar.setValue((int) newProgress);

            if (newProgress == 100.0) {
                // If the progress reaches 100%, mark the course as completed
                selectedCourseProgress.setCompleted(true);
                btnIncreaseCourseProgress.setEnabled(false); // Disable the increase button
                JOptionPane.showMessageDialog(this, "Congratulations! You have completed the course.", "Course Completed", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnIncreaseCourseProgressActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIncreaseCourseProgress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtCourseID;
    private javax.swing.JTextField txtCourseName;
    // End of variables declaration//GEN-END:variables

    private void loadCourseProgressBar() {
        txtCourseID.setText(Integer.toString(courseId)); // Set the course ID
    
        // Check if the course exists in the courseMap
        if (courseMap.containsKey(courseId)) {
            Course course = courseMap.get(courseId);
            txtCourseName.setText(course.getCourseName()); // Set the course name

            double progress = selectedCourseProgress.getProgress();
            jProgressBar.setValue((int) progress); // Set the progress bar value

            if (progress == 100.0) {
                // If the course is already completed (progress is 100%), disable the increase button
                btnIncreaseCourseProgress.setEnabled(false);
            } else {
                // If the course is not completed, enable the increase button
                btnIncreaseCourseProgress.setEnabled(true);
            }
        } else {
            // Handle the case where the course ID doesn't exist in courseMap
            txtCourseName.setText("Course Not Found");
            jProgressBar.setValue(0);
            btnIncreaseCourseProgress.setEnabled(false);
        }
    }
}
